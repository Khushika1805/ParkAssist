import React, { useState, useEffect } from 'react';
import { ParkingLot } from '@/entities/ParkingLot';
import { X, MapPin, Users } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';

export default function CreateAlertModal({ onClose, onSubmit }) {
  const [lots, setLots] = useState([]);
  const [selectedLot, setSelectedLot] = useState('');
  const [threshold, setThreshold] = useState(5);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    loadParkingLots();
  }, []);

  const loadParkingLots = async () => {
    try {
      const fetchedLots = await ParkingLot.list();
      setLots(fetchedLots);
    } catch (error) {
      console.error('Error loading parking lots:', error);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!selectedLot || !threshold) return;

    setIsLoading(true);
    try {
      await onSubmit({
        lot_name: selectedLot,
        threshold_spaces: threshold
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div 
        className="rounded-xl p-6 max-w-md w-full"
        style={{
          backgroundColor: 'var(--bg-card)',
          boxShadow: 'var(--shadow-lg)'
        }}
      >
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-bold" style={{ color: 'var(--text-primary)' }}>
            Create Alert
          </h2>
          <Button
            variant="ghost"
            size="icon"
            onClick={onClose}
            className="rounded-full"
          >
            <X className="w-5 h-5" />
          </Button>
        </div>

        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <Label htmlFor="lot" className="flex items-center space-x-2 mb-2">
              <MapPin className="w-4 h-4" />
              <span>Parking Lot</span>
            </Label>
            <Select value={selectedLot} onValueChange={setSelectedLot}>
              <SelectTrigger>
                <SelectValue placeholder="Select a parking lot" />
              </SelectTrigger>
              <SelectContent>
                {lots.map((lot) => (
                  <SelectItem key={lot.id} value={lot.name}>
                    {lot.name}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          <div>
            <Label htmlFor="threshold" className="flex items-center space-x-2 mb-2">
              <Users className="w-4 h-4" />
              <span>Minimum Free Spaces</span>
            </Label>
            <Input
              id="threshold"
              type="number"
              min="1"
              value={threshold}
              onChange={(e) => setThreshold(parseInt(e.target.value))}
              placeholder="Enter number of spaces"
            />
            <p className="text-xs mt-1" style={{ color: 'var(--text-secondary)' }}>
              You'll be notified when this many spaces become available
            </p>
          </div>

          <div className="flex justify-end space-x-3 pt-4">
            <Button
              type="button"
              variant="outline"
              onClick={onClose}
            >
              Cancel
            </Button>
            <Button
              type="submit"
              disabled={!selectedLot || !threshold || isLoading}
              className="bg-amber-500 hover:bg-amber-600"
            >
              {isLoading ? 'Creating...' : 'Create Alert'}
            </Button>
          </div>
        </form>
      </div>
    </div>
  );
}